<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (index2018_data)' inline='true' name='federated.1d09rgd1yrepr81h753vn1miatur' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='index2018_data' name='excel-direct.1175hol0972zpn142qpal17y2f2n'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/lacra/Downloads/index2018_data.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1175hol0972zpn142qpal17y2f2n' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AH187:no:A1:AH187:1' header='yes' lost='0' outcome='1' processed='5485'>
            <column datatype='integer' name='CountryID' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='string' name='WEBNAME' ordinal='2' />
            <column datatype='string' name='Region' ordinal='3' />
            <column datatype='integer' name='World Rank' ordinal='4' />
            <column datatype='integer' name='Region Rank' ordinal='5' />
            <column datatype='real' name='2018 Score' ordinal='6' />
            <column datatype='real' name='Property Rights' ordinal='7' />
            <column datatype='real' name='Judical Effectiveness' ordinal='8' />
            <column datatype='real' name='Government Integrity' ordinal='9' />
            <column datatype='real' name='Tax Burden' ordinal='10' />
            <column datatype='real' name='Gov&apos;t Spending' ordinal='11' />
            <column datatype='real' name='Fiscal Health' ordinal='12' />
            <column datatype='real' name='Business Freedom' ordinal='13' />
            <column datatype='real' name='Labor Freedom' ordinal='14' />
            <column datatype='real' name='Monetary Freedom' ordinal='15' />
            <column datatype='real' name='Trade Freedom' ordinal='16' />
            <column datatype='integer' name='Investment Freedom' ordinal='17' />
            <column datatype='integer' name='Financial Freedom' ordinal='18' />
            <column datatype='real' name='Tariff Rate (%)' ordinal='19' />
            <column datatype='real' name='Income Tax Rate (%)' ordinal='20' />
            <column datatype='real' name='Corporate Tax Rate (%)' ordinal='21' />
            <column datatype='real' name='Tax Burden % of GDP' ordinal='22' />
            <column datatype='real' name='Gov&apos;t Expenditure % of GDP' ordinal='23' />
            <column datatype='string' name='Country' ordinal='24' />
            <column datatype='real' name='Population (Millions)' ordinal='25' />
            <column datatype='real' name='GDP (Billions, PPP)' ordinal='26' />
            <column datatype='real' name='GDP Growth Rate (%)' ordinal='27' />
            <column datatype='real' name='5 Year GDP Growth Rate (%)' ordinal='28' />
            <column datatype='real' name='GDP per Capita (PPP)' ordinal='29' />
            <column datatype='real' name='Unemployment (%)' ordinal='30' />
            <column datatype='real' name='Inflation (%)' ordinal='31' />
            <column datatype='real' name='FDI Inflow (Millions)' ordinal='32' />
            <column datatype='real' name='Public Debt (% of GDP)' ordinal='33' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>CountryID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CountryID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEBNAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WEBNAME]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>WEBNAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[World Rank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>World Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region Rank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region Rank</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018 Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018 Score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>2018 Score</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Rights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Property Rights]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Property Rights</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Judical Effectiveness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Judical Effectiveness]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Judical Effectiveness</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Integrity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Integrity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Government Integrity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax Burden</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tax Burden]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Tax Burden</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gov&apos;t Spending</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gov&apos;t Spending]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gov&apos;t Spending</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fiscal Health</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fiscal Health]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Fiscal Health</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Business Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Business Freedom</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Labor Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Labor Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Labor Freedom</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Monetary Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Monetary Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Monetary Freedom</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trade Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trade Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Trade Freedom</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investment Freedom</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Investment Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Investment Freedom</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Financial Freedom</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Financial Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Financial Freedom</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tariff Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tariff Rate (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Tariff Rate (%)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Tax Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income Tax Rate (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Income Tax Rate (%)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corporate Tax Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corporate Tax Rate (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Corporate Tax Rate (%)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax Burden % of GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tax Burden % of GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Tax Burden % of GDP</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gov&apos;t Expenditure % of GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gov&apos;t Expenditure % of GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gov&apos;t Expenditure % of GDP</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population (Millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population (Millions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population (Millions)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (Billions, PPP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP (Billions, PPP)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP (Billions, PPP)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP Growth Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP Growth Rate (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP Growth Rate (%)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5 Year GDP Growth Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[5 Year GDP Growth Rate (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>5 Year GDP Growth Rate (%)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita (PPP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per Capita (PPP)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP per Capita (PPP)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unemployment (%)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inflation (%)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Inflation (%)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FDI Inflow (Millions)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FDI Inflow (Millions)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>FDI Inflow (Millions)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Public Debt (% of GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Public Debt (% of GDP)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Public Debt (% of GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AH187:no:A1:AH187:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5485</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Webname' datatype='string' name='[WEBNAME]' role='dimension' type='nominal' />
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='Count' name='[cnt:Country:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='Max' name='[max:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='Min' name='[min:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.212871' measure-ordering='alphabetic' measure-percentage='0.787129' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo, Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:Country:qk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo, Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo, Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo, Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[cnt:Country:qk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo, Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao P.D.R.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo, Republic of&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congo, Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Korea, North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Intro World' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Financial Freedom in the lasts years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Financial Freedom in the lasts years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='real' name='[2018 Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Financial Freedom]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[2018 Score]' derivation='Sum' name='[sum:2018 Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Financial Freedom]' derivation='Sum' name='[sum:Financial Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Angola&quot;' />
              <groupfilter from='&quot;Armenia&quot;' function='range' level='[none:Country:nk]' to='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter from='&quot;Bosnia and Herzegovina&quot;' function='range' level='[none:Country:nk]' to='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter from='&quot;Comoros&quot;' function='range' level='[none:Country:nk]' to='&quot;Congo, Republic of&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Côte d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter from='&quot;Cyprus&quot;' function='range' level='[none:Country:nk]' to='&quot;Paraguay&quot;' />
              <groupfilter from='&quot;Philippines&quot;' function='range' level='[none:Country:nk]' to='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter from='&quot;Vietnam&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Americas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:2018 Score:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Financiar Freeadom vs GPD Growth Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Financiar Freeadom vs GPD Growth Rate </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='real' name='[5 Year GDP Growth Rate (%)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Financial Freedom]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[World Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[5 Year GDP Growth Rate (%)]' derivation='Sum' name='[sum:5 Year GDP Growth Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Financial Freedom]' derivation='Sum' name='[sum:Financial Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World Rank]' derivation='Sum' name='[sum:World Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter from='&quot;Algeria&quot;' function='range' level='[none:Country:nk]' to='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none:Country:nk]' to='&quot;Barbados&quot;' />
              <groupfilter from='&quot;Belgium&quot;' function='range' level='[none:Country:nk]' to='&quot;Bolivia&quot;' />
              <groupfilter from='&quot;Botswana&quot;' function='range' level='[none:Country:nk]' to='&quot;Brunei Darussalam&quot;' />
              <groupfilter from='&quot;Burkina Faso&quot;' function='range' level='[none:Country:nk]' to='&quot;Côte d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cuba&quot;' />
              <groupfilter from='&quot;Czech Republic&quot;' function='range' level='[none:Country:nk]' to='&quot;Eritrea&quot;' />
              <groupfilter from='&quot;Ethiopia&quot;' function='range' level='[none:Country:nk]' to='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter from='&quot;Guatemala&quot;' function='range' level='[none:Country:nk]' to='&quot;Korea, South&quot;' />
              <groupfilter from='&quot;Kuwait&quot;' function='range' level='[none:Country:nk]' to='&quot;Libya&quot;' />
              <groupfilter from='&quot;Lithuania&quot;' function='range' level='[none:Country:nk]' to='&quot;Macau&quot;' />
              <groupfilter from='&quot;Madagascar&quot;' function='range' level='[none:Country:nk]' to='&quot;Mongolia&quot;' />
              <groupfilter from='&quot;Morocco&quot;' function='range' level='[none:Country:nk]' to='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter from='&quot;Rwanda&quot;' function='range' level='[none:Country:nk]' to='&quot;Senegal&quot;' />
              <groupfilter from='&quot;Seychelles&quot;' function='range' level='[none:Country:nk]' to='&quot;Singapore&quot;' />
              <groupfilter from='&quot;Slovenia&quot;' function='range' level='[none:Country:nk]' to='&quot;Uganda&quot;' />
              <groupfilter from='&quot;United Arab Emirates&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
              <lod column='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:World Rank:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:5 Year GDP Growth Rate (%):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Intro World'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Intro World financiar freedom</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='real' name='[2018 Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Financial Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Financial Freedom]' derivation='Sum' name='[sum:Financial Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter expression='SUM([2018 Score]) &gt;= 60.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d09rgd1yrepr81h753vn1miatur].[Longitude (generated)]' field-type='quantitative' max='28326443.023451403' min='-16785626.864319958' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1d09rgd1yrepr81h753vn1miatur].[Latitude (generated)]' field-type='quantitative' max='17878771.256135151' min='-22639063.293372378' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]' num-steps='5' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]' />
              <lod column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
              <geometry column='[federated.1d09rgd1yrepr81h753vn1miatur].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[Latitude (generated)]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Judical Effectiveness'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Judical Effectiveness in all the countrys in de world</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Financial Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Judical Effectiveness]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Financial Freedom]' derivation='None' name='[none:Financial Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Judical Effectiveness]' derivation='Sum' name='[sum:Judical Effectiveness:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter expression='SUM([Judical Effectiveness]) &gt;= 60.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Financial Freedom:qk]' included-values='in-range'>
            <min>60</min>
            <max>90</max>
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Financial Freedom:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Judical Effectiveness:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Judical Effectiveness:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Labor Freedom '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Labor freedom vs unemployment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Financial Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Labor Freedom]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Unemployment (%)]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Financial Freedom]' derivation='Sum' name='[sum:Financial Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Labor Freedom]' derivation='Sum' name='[sum:Labor Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unemployment (%)]' derivation='Sum' name='[sum:Unemployment (%):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Americas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='17' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <size column='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]' />
              <lod column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Labor Freedom:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Unemployment (%):ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Monetary Freadom by country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Monetary Freadom by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Monetary Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Monetary Freedom]' derivation='Sum' name='[sum:Monetary Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Monetary Freedom])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([Monetary Freedom]) &gt;= 50.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
              <lod column='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Monetary Freedom:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Monetary Freedom:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Trade Freedom by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trade Freedom by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='real' name='[2018 Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Government Integrity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Income Tax Rate (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trade Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Government Integrity]' derivation='Avg' name='[avg:Government Integrity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Income Tax Rate (%)]' derivation='Avg' name='[avg:Income Tax Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trade Freedom]' derivation='Sum' name='[sum:Trade Freedom:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1d09rgd1yrepr81h753vn1miatur].[avg:Income Tax Rate (%):qk]' included-values='in-range'>
            <min>0.0</min>
            <max>60.0</max>
          </filter>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2018 Score])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([2018 Score]) &gt;= 50.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</column>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[avg:Income Tax Rate (%):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1d09rgd1yrepr81h753vn1miatur].[avg:Government Integrity:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Trade Freedom:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='investiments freadom by guvernament integrity'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Investiments Freadom by Governement integrity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (index2018_data)' name='federated.1d09rgd1yrepr81h753vn1miatur' />
          </datasources>
          <datasource-dependencies datasource='federated.1d09rgd1yrepr81h753vn1miatur'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Investment Freedom]' role='measure' type='quantitative' />
            <column-instance column='[Investment Freedom]' derivation='Avg' name='[avg:Investment Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='Max' name='[max:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[max:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Hong Kong SAR&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[max:Country:nk]' member='&quot;Netherlands&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1d09rgd1yrepr81h753vn1miatur].[max:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1d09rgd1yrepr81h753vn1miatur].[avg:Investment Freedom:qk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='369' />
                <format attr='maxwidth' value='369' />
                <format attr='minheight' value='370' />
                <format attr='maxheight' value='370' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d09rgd1yrepr81h753vn1miatur].[avg:Investment Freedom:qk]</rows>
        <cols>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97122' id='5' param='horz' type='layout-flow' w='98504' x='748' y='1439'>
            <zone h='97122' id='3' type='layout-basic' w='83537' x='748' y='1439'>
              <zone h='48560' id='1' name='Intro World' w='41768' x='748' y='1439'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97122' id='7' name='Judical Effectiveness' w='41769' x='42516' y='1439'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48562' id='9' name='Trade Freedom by Country' w='41768' x='748' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97122' id='4' is-fixed='true' param='vert' type='layout-flow' w='14967' x='84285' y='1439'>
              <zone h='97122' id='8' name='Judical Effectiveness' pane-specification-id='0' param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='color' w='14967' x='84285' y='1439'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Financial Freedom in the World</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='1' param='vert' removable='false' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='4878' id='3' type='title' w='99034' x='483' y='929' />
            <zone h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99034' x='483' y='5807' />
            <zone h='81533' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99034' x='483' y='17538'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Financial Freedom in the World ' captured-sheet='Intro World' id='1'>
                    <capturedDeltas>
                      <worksheet name='Intro World'>
                        <filter class='categorical' column='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]'>
                          <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1d09rgd1yrepr81h753vn1miatur].[Latitude (generated)]' field-type='quantitative' max='23178747.565035902' min='-29239817.07756469' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1d09rgd1yrepr81h753vn1miatur].[Longitude (generated)]' field-type='quantitative' max='32588564.963768449' min='-21545918.901557185' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Monetary Freedom by Country' captured-sheet='Monetary Freadom by country' id='2' />
                  <story-point caption='Judical Effecctiveness' captured-sheet='Judical Effectiveness' id='3' />
                  <story-point caption='Financial Freeadom vs GPD Growth Rate' captured-sheet='Financiar Freeadom vs GPD Growth Rate' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Intro in the World ' captured-sheet='Intro World' id='1' />
                  <story-point caption='Monetary Freedom  by Country ' captured-sheet='Monetary Freadom by country' id='2' />
                  <story-point caption='Judical Effectiveness in the World ' captured-sheet='Judical Effectiveness' id='3' />
                  <story-point caption='Financial Freedom in Europe ' captured-sheet='Financiar Freeadom vs GPD Growth Rate' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Intro World'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Monetary Freadom by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='13' param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='investiments freadom by guvernament integrity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[Country (group)]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:WEBNAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Judical Effectiveness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Financial Freedom:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Financial Freedom:qk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Judical Effectiveness:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Labor Freedom '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='filter' />
            <card pane-specification-id='17' param='[federated.1d09rgd1yrepr81h753vn1miatur].[sum:Financial Freedom:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Financial Freedom:qk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Unemployment (%):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trade Freedom by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Financiar Freeadom vs GPD Growth Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Financial Freedom in the lasts years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Country:nk]</field>
            <field>[federated.1d09rgd1yrepr81h753vn1miatur].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Intro World'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Judical Effectiveness'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trade Freedom by Country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Story 2'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='576' name='Dashboard 1' width='576'>
      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
    </thumbnail>
    <thumbnail height='192' name='Financial Freedom in the lasts years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Financiar Freeadom vs GPD Growth Rate' width='192'>
      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
      /wMt/Foff3hNYgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Intro World' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Judical Effectiveness' width='192'>
      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
      pKaRApDUNP8fqtELBJ0LujcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Labor Freedom ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monetary Freadom by country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trade Freedom by Country' width='192'>
      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
      veQv/xRlxfnodhaVRgO3x5PZdf9KaY4rXOfeaVDNYFHJChaVTJlmmBQtr8TbrZnEXJIT78LT
      JADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTJADC0yQA
      wtMkAMLTJADC0yQAwtMkAMLTJADC0yQAwtMkAMLTXGuL0ttay6kLTVjAcLCPlTs/z5qcCd44
      cpYIOkurt7Fx5WK3yhECcDEAeaXVPF5aDdY4p46eorwom+Zzh6l44HGWpU5w8M3zhFYuZrZG
      fULcay5+P8Ck/o4W7OxS8lKiNI2msjQngIHOIg2GAdO2sW0bANu2pzeHVdgc17KiMRvRRqNR
      ZeO+O/+INvOyWZa6sS3L+pDmu+rWdzQ6y/pWuMw40xsOuxsAO8yNlk7K1u1EI4rmWNh3fmU5
      DhqgaRq6PnloMvX/dyYoK03T9OljTRFr+r2i67HH1jR1Y+uzLPOd0dWNPcsyu7G+3+VqAIa7
      WxhNLqIg3QQMcnLCtNwcoCInRJfmYz2TG712Z0PXNO1up2jVdF2POZauz9y63J2x1W0Mmu7e
      +n2/WZdZYejRmDauiwFw6B0YZsXyKnQNQKe0cj2nT57gtbBB1cat7u+PCc9zcZvTWLZ647Qp
      /rQ8du7+nHslCPE+ch1AeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoE
      QHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mqudSBzHvtNlTcfn
      m+zNYltRbEfD8BnoChtfCTET1wLgOBHqTh2hKTiOmZTB5vu3kjTayoGjF/D5NHJXbGFbdbHC
      XmRCfJBrARjrbKInsJQnHl95ZyOPcuntJjZ/5mmKkyY4dPA0oepiktwqSAhcDEB/MEjPjdu8
      0lbHRFSn5sHtjIXTKU/V0fCTr2uTzXEta1pz3HA4/N5MFDbHjUYj08eaIhJj+r0SCYfR73ZJ
      nS4ana157ccTjUZjLvMkdes7HJllfc/asPfjcRymjetaAHTdx7KqTWyuKGKg7TpXb7Vj2BEi
      DqDZhC0bg+lNUx3HwTTN92ai8BjB8PmmjzWFL6puQwAwTRPTnPlPYRjq/kQ+I/YyT1K3vs3Z
      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
      Y6nb0lmqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='investiments freadom by guvernament integrity' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
